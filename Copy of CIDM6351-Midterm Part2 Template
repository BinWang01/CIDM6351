{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"10906iKnKlabIyqI9JNdEiM14mcOPYzA8","timestamp":1678581870933}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"lJURtoBh4mQu"},"source":["<h1  align=\"center\">CIDM6351: Midterm Exam Part2 (55 points)</h1>\n","\n","* **Save a copy to your Google Drive and to answer on your copy**\n","* **Submit the share link of your Colab Notebook to WTClass**\n","* Please follow the instruction in 'Student Guides' folder if you didn't how to submit the share link to WTClass.\n","* The exam part2 is open note/Internet. \n","- Students should complete it **individually.**"]},{"cell_type":"markdown","metadata":{"id":"KGHAsL5LXqkY"},"source":["# Q1 (10 points): Collecting data from database "]},{"cell_type":"markdown","metadata":{"id":"DIV8xWQmolEr"},"source":["Following is a sample document within a **midterm** collection saved in MongoDB.\n","\n","```json\n","{\n","  \"_id\":{\"$oid\":\"5e93eff5d8aa005a58574ffa\"},\n","  \"Film\":\"Marley and Me\",\n","  \"Genre\":\"Comedy\",\n","  \"Lead Studio\":\"Fox\",\n","  \"Audience score %\":\"77\",\n","  \"Profitability\":\"3.746781818\",\n","  \"Rotten Tomatoes %\":\"63\",\n","  \"Worldwide Gross\":\"$206.07 \",\n","  \"Year\":\"2008\"\n","}\n","```"]},{"cell_type":"markdown","metadata":{"id":"8CYcjfBpri-n"},"source":["### 1.1 (5 points) \n","- Connect to the MongoDB via the link saved in ```midterm_db_link``` (1 pt)\n","- list all databases names (2 pts)\n","- list all collections in cidm6351 database (2 pts)"]},{"cell_type":"code","source":["# At first, run this cell to install and load package\n","!pip3 install pymongo[srv]\n","\n","# import pymongo package\n","import pymongo\n","# MongoDB connection link\n","midterm_db_link = 'mongodb+srv://cidm6351:cidm6351week3@cluster0.kyufs.azure.mongodb.net/test'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TIWZUmeoyCBi","executionInfo":{"status":"ok","timestamp":1678581935710,"user_tz":360,"elapsed":8254,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}},"outputId":"39c681aa-7abf-4d02-fcf5-a6afa6371508"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pymongo[srv] in /usr/local/lib/python3.9/dist-packages (4.3.3)\n","Requirement already satisfied: dnspython<3.0.0,>=1.16.0 in /usr/local/lib/python3.9/dist-packages (from pymongo[srv]) (2.3.0)\n"]}]},{"cell_type":"code","source":["# ---put your answer below--\n","myclient = pymongo.MongoClient(midterm_db_link)\n","print(f\"Database Names: {myclient.list_database_names()}\")\n","db = myclient.cidm6351\n","collection_list = db.list_collection_names()\n","print(f\"Collections in database cidm6351: {collection_list}\")"],"metadata":{"id":"1YfRNAwag206","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678584774581,"user_tz":360,"elapsed":841,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}},"outputId":"6f4c3301-1cc3-46e9-9455-5478be9a3c34"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Database Names: ['cidm6351', 'sample_airbnb', 'sample_analytics', 'sample_geospatial', 'sample_mflix', 'sample_restaurants', 'sample_supplies', 'sample_training', 'sample_weatherdata', 'admin', 'local']\n","Collections in database cidm6351: ['webScraping', 'midterm', 'movie']\n"]}]},{"cell_type":"code","metadata":{"id":"GQAYT9sNpRWD","executionInfo":{"status":"ok","timestamp":1646004542253,"user_tz":360,"elapsed":2205,"user":{"displayName":"Carl J.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00314995275315155530"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"74759489-5315-4245-b979-027e376b5292"},"source":["# sample output"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Database Names:  ['cidm6351', 'sample_airbnb', 'sample_analytics', 'sample_geospatial', 'sample_mflix', 'sample_restaurants', 'sample_supplies', 'sample_training', 'sample_weatherdata', 'admin', 'local']\n","Collections in database cidm6351:  ['movie', 'midterm', 'webScraping', 'finalProject']\n"]}]},{"cell_type":"markdown","metadata":{"id":"fpxmJ6f1rs9Y"},"source":["### 1.2 (5 points) From **midterm** collection, to find all movies created **before 2011**, then print out their ```move name``` and ```year```"]},{"cell_type":"code","source":["# ---put your answer below--\n","movies = db.midterm\n","for movie in movies.find():\n","  if int(movie['Year']) < 2011:\n","    print(f\"Movie: {movie['Film']}\\nYear: {movie['Year']}\")\n","    print('----------')\n","\n","\n","\n","\n","\n"],"metadata":{"id":"VskNwuiShPQC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678587787565,"user_tz":360,"elapsed":228,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}},"outputId":"38a674fa-bf23-4e89-f907-2e3807efb8c4"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["Movie: Fireproof\n","Year: 2008\n","----------\n","Movie: High School Musical 3: Senior Year\n","Year: 2008\n","----------\n","Movie: Enchanted\n","Year: 2007\n","----------\n","Movie: Good Luck Chuck\n","Year: 2007\n","----------\n","Movie: 27 Dresses\n","Year: 2008\n","----------\n","Movie: Just Wright\n","Year: 2010\n","----------\n","Movie: Love & Other Drugs\n","Year: 2010\n","----------\n","Movie: Going the Distance\n","Year: 2010\n","----------\n","Movie: Dear John\n","Year: 2010\n","----------\n","Movie: Leap Year\n","Year: 2010\n","----------\n","Movie: Love Happens\n","Year: 2009\n","----------\n","Movie: Across the Universe\n","Year: 2007\n","----------\n","Movie: A Serious Man\n","Year: 2009\n","----------\n","Movie: I Love You Phillip Morris\n","Year: 2010\n","----------\n","Movie: Life as We Know It\n","Year: 2010\n","----------\n","Movie: Letters to Juliet\n","Year: 2010\n","----------\n","Movie: License to Wed\n","Year: 2007\n","----------\n","Movie: Killers\n","Year: 2010\n","----------\n","Movie: He's Just Not That Into You\n","Year: 2009\n","----------\n","Movie: Knocked Up\n","Year: 2007\n","----------\n","Movie: Ghosts of Girlfriends Past\n","Year: 2009\n","----------\n","Movie: It's Complicated\n","Year: 2009\n","----------\n","Movie: Four Christmases\n","Year: 2008\n","----------\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"BHjQzwkEc3qm"}},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eG7KlDWgmqRj","executionInfo":{"status":"ok","timestamp":1646004544833,"user_tz":360,"elapsed":2582,"user":{"displayName":"Carl J.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00314995275315155530"}},"outputId":"e2236a0b-5eeb-410a-f4b6-2d2fae206559"},"source":["# sample output (The order of movie records could be different)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Move: Knocked Up\n","Year: 2007\n","----------\n","Move: Love Happens\n","Year: 2009\n","----------\n","Move: Fireproof\n","Year: 2008\n","----------\n","Move: Four Christmases\n","Year: 2008\n","----------\n","Move: Going the Distance\n","Year: 2010\n","----------\n","Move: License to Wed\n","Year: 2007\n","----------\n","Move: Good Luck Chuck\n","Year: 2007\n","----------\n","Move: Enchanted\n","Year: 2007\n","----------\n","Move: Life as We Know It\n","Year: 2010\n","----------\n","Move: Letters to Juliet\n","Year: 2010\n","----------\n","Move: Just Wright\n","Year: 2010\n","----------\n","Move: High School Musical 3: Senior Year\n","Year: 2008\n","----------\n","Move: He's Just Not That Into You\n","Year: 2009\n","----------\n","Move: Love & Other Drugs\n","Year: 2010\n","----------\n","Move: I Love You Phillip Morris\n","Year: 2010\n","----------\n","Move: 27 Dresses\n","Year: 2008\n","----------\n","Move: A Serious Man\n","Year: 2009\n","----------\n","Move: Across the Universe\n","Year: 2007\n","----------\n","Move: Leap Year\n","Year: 2010\n","----------\n","Move: Dear John\n","Year: 2010\n","----------\n","Move: Ghosts of Girlfriends Past\n","Year: 2009\n","----------\n","Move: Killers\n","Year: 2010\n","----------\n","Move: It's Complicated\n","Year: 2009\n","----------\n"]}]},{"cell_type":"markdown","metadata":{"id":"oHX6cXOpqYxS"},"source":["# Q2 (30 points): Processing data with Pandas"]},{"cell_type":"code","metadata":{"id":"IRqyECpiq9kL","executionInfo":{"status":"ok","timestamp":1678585178894,"user_tz":360,"elapsed":124,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}}},"source":["# import pandas package and load file paths at first\n","import pandas as pd\n","\n","midterm_csv = 'https://raw.githubusercontent.com/czwtamu/CIDM6351/main/midterm.csv'\n","midterm_json = 'https://raw.githubusercontent.com/czwtamu/CIDM6351/main/midterm.json'"],"execution_count":29,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eGikJ1sS8kt3"},"source":["### 2.1  (5 points) Loading data stored in ```midterm_csv``` and ```midterm_json``` to two Pandas DataFrames, respectively. "]},{"cell_type":"code","metadata":{"id":"CNunFdHOrRIY","executionInfo":{"status":"ok","timestamp":1678585180622,"user_tz":360,"elapsed":593,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}}},"source":["# ---put your answer below--\n","csv_df = pd.read_csv(midterm_csv)\n","json_df = pd.read_json(midterm_json)\n","\n","\n","# no output printed out in this step"],"execution_count":30,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"BFj9lo7vsWXX"},"source":["### 2.2  (5 points) Print the information of Json dataframe and CSV dataframe, respectively"]},{"cell_type":"code","source":["# ---put your answer below--\n","json_df.info()\n","csv_df.info()\n","\n","\n","\n"],"metadata":{"id":"jGyiHjPChUcp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678587832946,"user_tz":360,"elapsed":100,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}},"outputId":"233abb64-716f-4dbc-dab5-fa9e1c7165d7"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 23 entries, 0 to 22\n","Data columns (total 9 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   _id                23 non-null     object \n"," 1   Film               23 non-null     object \n"," 2   Genre              23 non-null     object \n"," 3   Lead Studio        23 non-null     object \n"," 4   Audience score %   23 non-null     int64  \n"," 5   Profitability      23 non-null     float64\n"," 6   Rotten Tomatoes %  23 non-null     int64  \n"," 7   Worldwide Gross    23 non-null     object \n"," 8   Year               23 non-null     int64  \n","dtypes: float64(1), int64(3), object(5)\n","memory usage: 1.7+ KB\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 25 entries, 0 to 24\n","Data columns (total 9 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   _id                25 non-null     object \n"," 1   Film               25 non-null     object \n"," 2   Genre              25 non-null     object \n"," 3   Lead Studio        25 non-null     object \n"," 4   Audience score %   25 non-null     int64  \n"," 5   Profitability      25 non-null     float64\n"," 6   Rotten Tomatoes %  25 non-null     int64  \n"," 7   Worldwide Gross    25 non-null     object \n"," 8   Year               25 non-null     int64  \n","dtypes: float64(1), int64(3), object(5)\n","memory usage: 1.9+ KB\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DIXVHzverbEz","executionInfo":{"status":"ok","timestamp":1646004546265,"user_tz":360,"elapsed":9,"user":{"displayName":"Carl J.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00314995275315155530"}},"outputId":"6ed2cf1d-5ae4-4507-a10c-666beec8173f"},"source":["# sample output of json dataframe"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 23 entries, 0 to 22\n","Data columns (total 9 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   _id                23 non-null     object \n"," 1   Film               23 non-null     object \n"," 2   Genre              23 non-null     object \n"," 3   Lead Studio        23 non-null     object \n"," 4   Audience score %   23 non-null     int64  \n"," 5   Profitability      23 non-null     float64\n"," 6   Rotten Tomatoes %  23 non-null     int64  \n"," 7   Worldwide Gross    23 non-null     object \n"," 8   Year               23 non-null     int64  \n","dtypes: float64(1), int64(3), object(5)\n","memory usage: 1.7+ KB\n","None\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vg-EiY7Ms-6L","executionInfo":{"status":"ok","timestamp":1646004546265,"user_tz":360,"elapsed":8,"user":{"displayName":"Carl J.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00314995275315155530"}},"outputId":"5477d784-ef9c-42ce-ea02-1de0e6669156"},"source":["# sample output of csv dataframe"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 25 entries, 0 to 24\n","Data columns (total 9 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   _id                25 non-null     object \n"," 1   Film               25 non-null     object \n"," 2   Genre              25 non-null     object \n"," 3   Lead Studio        25 non-null     object \n"," 4   Audience score %   25 non-null     int64  \n"," 5   Profitability      25 non-null     float64\n"," 6   Rotten Tomatoes %  25 non-null     int64  \n"," 7   Worldwide Gross    25 non-null     object \n"," 8   Year               25 non-null     int64  \n","dtypes: float64(1), int64(3), object(5)\n","memory usage: 1.9+ KB\n","None\n"]}]},{"cell_type":"markdown","metadata":{"id":"8mBPUYmluWje"},"source":["### 2.3  (5 points) In JSON dataframe,  \n","- At first, find all moves whose: \n","    - ```Audience score``` is greater than 50 **AND**\n","    - ```Rotten Tomatoes``` score are greater than 50 **AND**\n","    - the produced ```Year``` is before 2011 (Year <2011)\n","- Then, extract columns: ```Film```, ```Genre``` and ```Year``` as a new dataframe\n","- Finally, print out this new dataframe"]},{"cell_type":"code","source":["# ---put your answer below--\n","json_condition = (json_df['Audience score %']>50) & (json_df['Rotten Tomatoes %']>50) & (json_df['Year']<2011)\n","json_result = json_df[json_condition][['Film','Genre','Year']]\n","json_result\n","\n","\n","\n"],"metadata":{"id":"AsN8yKvWh_ga","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1678587849303,"user_tz":360,"elapsed":612,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}},"outputId":"cd8b8ce2-3eb1-400e-ea5d-4f29f624cdb9"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                   Film      Genre  Year\n","0            Zack and Miri Make a Porno    Romance  2008\n","1                       Youth in Revolt     Comedy  2010\n","6                                WALL-E  Animation  2008\n","7                              Waitress    Romance  2007\n","19                          The Duchess      Drama  2008\n","20  The Curious Case of Benjamin Button    Fantasy  2008\n","22                              Tangled  Animation  2010"],"text/html":["\n","  <div id=\"df-8c32f85f-e9d7-417e-b8b9-289de76684d1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Film</th>\n","      <th>Genre</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Zack and Miri Make a Porno</td>\n","      <td>Romance</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Youth in Revolt</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>WALL-E</td>\n","      <td>Animation</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Waitress</td>\n","      <td>Romance</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>The Duchess</td>\n","      <td>Drama</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>The Curious Case of Benjamin Button</td>\n","      <td>Fantasy</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Tangled</td>\n","      <td>Animation</td>\n","      <td>2010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c32f85f-e9d7-417e-b8b9-289de76684d1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8c32f85f-e9d7-417e-b8b9-289de76684d1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8c32f85f-e9d7-417e-b8b9-289de76684d1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":74}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":268},"id":"FPVpdcgNwXO8","executionInfo":{"status":"ok","timestamp":1646004546265,"user_tz":360,"elapsed":6,"user":{"displayName":"Carl J.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00314995275315155530"}},"outputId":"9c639e5e-5c4f-439e-d4c8-5ba3a08d7cd1"},"source":["# sample output"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-46e12a97-75d1-4c14-a1bd-915bb722c5a4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Film</th>\n","      <th>Genre</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Zack and Miri Make a Porno</td>\n","      <td>Romance</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Youth in Revolt</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>WALL-E</td>\n","      <td>Animation</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Waitress</td>\n","      <td>Romance</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>The Duchess</td>\n","      <td>Drama</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>The Curious Case of Benjamin Button</td>\n","      <td>Fantasy</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Tangled</td>\n","      <td>Animation</td>\n","      <td>2010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-46e12a97-75d1-4c14-a1bd-915bb722c5a4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-46e12a97-75d1-4c14-a1bd-915bb722c5a4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-46e12a97-75d1-4c14-a1bd-915bb722c5a4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                                   Film      Genre  Year\n","0            Zack and Miri Make a Porno    Romance  2008\n","1                       Youth in Revolt     Comedy  2010\n","6                                WALL-E  Animation  2008\n","7                              Waitress    Romance  2007\n","19                          The Duchess      Drama  2008\n","20  The Curious Case of Benjamin Button    Fantasy  2008\n","22                              Tangled  Animation  2010"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"cZaUAWhEvNfQ"},"source":["### 2.4  (5 points) In CSV dataframe,\n","- At first, find all moves whose: \n","  - ```Audience score``` is less than 50 **AND**\n","  - ```Rotten Tomatoes``` score is less than 50 **AND**\n","  - The produced ```Year``` is after 2008 (Year >2008)\n","- Then, extract columns: ```Film```, ```Genre``` and ```Year``` as a new dataframe\n","- Finally, print out this new dataframe"]},{"cell_type":"code","source":["# ---put your answer below--\n","csv_condition = (csv_df['Audience score %']<50) & (csv_df['Rotten Tomatoes %']<50) & (csv_df['Year']>2008)\n","csv_result = csv_df[csv_condition][['Film','Genre','Year']]\n","csv_result\n","\n","\n","\n","\n"],"metadata":{"id":"a_VerHRniDvS","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1678587855616,"user_tz":360,"elapsed":112,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}},"outputId":"bcf3280a-4b1b-44cf-8de9-43554e4fb7f4"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    Film    Genre  Year\n","0     Something Borrowed  Romance  2011\n","2   Sex and the City Two   Comedy  2010\n","3     Sex and the City 2   Comedy  2010\n","10    Our Family Wedding   Comedy  2010\n","15        New Year's Eve  Romance  2011"],"text/html":["\n","  <div id=\"df-b862ce16-4a19-4656-8adb-6299468bb21c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Film</th>\n","      <th>Genre</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Something Borrowed</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Sex and the City Two</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sex and the City 2</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Our Family Wedding</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>New Year's Eve</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b862ce16-4a19-4656-8adb-6299468bb21c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b862ce16-4a19-4656-8adb-6299468bb21c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b862ce16-4a19-4656-8adb-6299468bb21c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":75}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"2kaVLzY9tW4a","executionInfo":{"status":"ok","timestamp":1646004546266,"user_tz":360,"elapsed":7,"user":{"displayName":"Carl J.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00314995275315155530"}},"outputId":"720ef507-d96c-4a1a-c803-a1c8daaf39b8"},"source":["# sample output"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-984238c9-8349-43d6-9f48-bad36eecf8a1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Film</th>\n","      <th>Genre</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Something Borrowed</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Sex and the City Two</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sex and the City 2</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Our Family Wedding</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>New Year's Eve</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-984238c9-8349-43d6-9f48-bad36eecf8a1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-984238c9-8349-43d6-9f48-bad36eecf8a1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-984238c9-8349-43d6-9f48-bad36eecf8a1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                    Film    Genre  Year\n","0     Something Borrowed  Romance  2011\n","2   Sex and the City Two   Comedy  2010\n","3     Sex and the City 2   Comedy  2010\n","10    Our Family Wedding   Comedy  2010\n","15        New Year's Eve  Romance  2011"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"maO4wibbyrn8"},"source":["### 2.5  (5 points) Concatenate the results getting from Question 2.3 and Question 2.4 and print it out\n","we didn't introduct concatenate in lecture. Here is an example that could help you answer this question\n","\n","https://pandas.pydata.org/pandas-docs/stable/user_guide/merging.html"]},{"cell_type":"code","source":["# ---put your answer below--\n","frames = [json_result, csv_result]\n","result = pd.concat(frames)\n","result\n","\n","\n"],"metadata":{"id":"Zie6ACHniHPb","colab":{"base_uri":"https://localhost:8080/","height":426},"executionInfo":{"status":"ok","timestamp":1678587859572,"user_tz":360,"elapsed":192,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}},"outputId":"f42a498c-8829-4cd9-db50-ccaa6f4341df"},"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                   Film      Genre  Year\n","0            Zack and Miri Make a Porno    Romance  2008\n","1                       Youth in Revolt     Comedy  2010\n","6                                WALL-E  Animation  2008\n","7                              Waitress    Romance  2007\n","19                          The Duchess      Drama  2008\n","20  The Curious Case of Benjamin Button    Fantasy  2008\n","22                              Tangled  Animation  2010\n","0                    Something Borrowed    Romance  2011\n","2                  Sex and the City Two     Comedy  2010\n","3                    Sex and the City 2     Comedy  2010\n","10                   Our Family Wedding     Comedy  2010\n","15                       New Year's Eve    Romance  2011"],"text/html":["\n","  <div id=\"df-149ec7c0-2e2f-4331-9c20-21f11f866850\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Film</th>\n","      <th>Genre</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Zack and Miri Make a Porno</td>\n","      <td>Romance</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Youth in Revolt</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>WALL-E</td>\n","      <td>Animation</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Waitress</td>\n","      <td>Romance</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>The Duchess</td>\n","      <td>Drama</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>The Curious Case of Benjamin Button</td>\n","      <td>Fantasy</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Tangled</td>\n","      <td>Animation</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Something Borrowed</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Sex and the City Two</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sex and the City 2</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Our Family Wedding</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>New Year's Eve</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-149ec7c0-2e2f-4331-9c20-21f11f866850')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-149ec7c0-2e2f-4331-9c20-21f11f866850 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-149ec7c0-2e2f-4331-9c20-21f11f866850');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":76}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":425},"id":"Cq6tEMNctZGy","executionInfo":{"status":"ok","timestamp":1646004546266,"user_tz":360,"elapsed":6,"user":{"displayName":"Carl J.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00314995275315155530"}},"outputId":"a21367c3-8a8b-4707-ab88-2de4d60999bf"},"source":["# sample output"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-b209beb1-e5c8-47ed-93f7-ae94c40e4091\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Film</th>\n","      <th>Genre</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Zack and Miri Make a Porno</td>\n","      <td>Romance</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Youth in Revolt</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>WALL-E</td>\n","      <td>Animation</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Waitress</td>\n","      <td>Romance</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>The Duchess</td>\n","      <td>Drama</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>The Curious Case of Benjamin Button</td>\n","      <td>Fantasy</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Tangled</td>\n","      <td>Animation</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Something Borrowed</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Sex and the City Two</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sex and the City 2</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Our Family Wedding</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>New Year's Eve</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b209beb1-e5c8-47ed-93f7-ae94c40e4091')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b209beb1-e5c8-47ed-93f7-ae94c40e4091 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b209beb1-e5c8-47ed-93f7-ae94c40e4091');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                                   Film      Genre  Year\n","0            Zack and Miri Make a Porno    Romance  2008\n","1                       Youth in Revolt     Comedy  2010\n","6                                WALL-E  Animation  2008\n","7                              Waitress    Romance  2007\n","19                          The Duchess      Drama  2008\n","20  The Curious Case of Benjamin Button    Fantasy  2008\n","22                              Tangled  Animation  2010\n","0                    Something Borrowed    Romance  2011\n","2                  Sex and the City Two     Comedy  2010\n","3                    Sex and the City 2     Comedy  2010\n","10                   Our Family Wedding     Comedy  2010\n","15                       New Year's Eve    Romance  2011"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"K8NU_QQyzbTE"},"source":["### 2.6  (5 points) Sort the concatenated result from Question 2.5 by columns: ```Genre``` and ```Year``` in ```ascending order```. Then, print sorted data"]},{"cell_type":"code","source":["# ---put your answer below--\n","sorted_result = result.sort_values(['Genre','Year'])\n","sorted_result\n","\n","\n","\n","\n"],"metadata":{"id":"b58k2cUOiJky","colab":{"base_uri":"https://localhost:8080/","height":426},"executionInfo":{"status":"ok","timestamp":1678587864077,"user_tz":360,"elapsed":218,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}},"outputId":"ff34baee-c977-4cb1-bbb3-6b5075bdbe58"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                   Film      Genre  Year\n","6                                WALL-E  Animation  2008\n","22                              Tangled  Animation  2010\n","1                       Youth in Revolt     Comedy  2010\n","2                  Sex and the City Two     Comedy  2010\n","3                    Sex and the City 2     Comedy  2010\n","10                   Our Family Wedding     Comedy  2010\n","19                          The Duchess      Drama  2008\n","20  The Curious Case of Benjamin Button    Fantasy  2008\n","7                              Waitress    Romance  2007\n","0            Zack and Miri Make a Porno    Romance  2008\n","0                    Something Borrowed    Romance  2011\n","15                       New Year's Eve    Romance  2011"],"text/html":["\n","  <div id=\"df-23e7236b-3cd4-4555-96cb-7c481426ca06\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Film</th>\n","      <th>Genre</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6</th>\n","      <td>WALL-E</td>\n","      <td>Animation</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Tangled</td>\n","      <td>Animation</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Youth in Revolt</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Sex and the City Two</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sex and the City 2</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Our Family Wedding</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>The Duchess</td>\n","      <td>Drama</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>The Curious Case of Benjamin Button</td>\n","      <td>Fantasy</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Waitress</td>\n","      <td>Romance</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Zack and Miri Make a Porno</td>\n","      <td>Romance</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Something Borrowed</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>New Year's Eve</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23e7236b-3cd4-4555-96cb-7c481426ca06')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-23e7236b-3cd4-4555-96cb-7c481426ca06 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-23e7236b-3cd4-4555-96cb-7c481426ca06');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":77}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":425},"id":"ButGkrr8zRNa","executionInfo":{"status":"ok","timestamp":1646004546582,"user_tz":360,"elapsed":322,"user":{"displayName":"Carl J.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00314995275315155530"}},"outputId":"b944f071-e8df-467e-fde7-6fa0fa9ad23a"},"source":["# sample output"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-6ae4da53-d0eb-4090-8859-d6dec0e4c3e4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Film</th>\n","      <th>Genre</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6</th>\n","      <td>WALL-E</td>\n","      <td>Animation</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Tangled</td>\n","      <td>Animation</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Youth in Revolt</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Sex and the City Two</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sex and the City 2</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Our Family Wedding</td>\n","      <td>Comedy</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>The Duchess</td>\n","      <td>Drama</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>The Curious Case of Benjamin Button</td>\n","      <td>Fantasy</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Waitress</td>\n","      <td>Romance</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Zack and Miri Make a Porno</td>\n","      <td>Romance</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Something Borrowed</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>New Year's Eve</td>\n","      <td>Romance</td>\n","      <td>2011</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ae4da53-d0eb-4090-8859-d6dec0e4c3e4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6ae4da53-d0eb-4090-8859-d6dec0e4c3e4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6ae4da53-d0eb-4090-8859-d6dec0e4c3e4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                                   Film      Genre  Year\n","6                                WALL-E  Animation  2008\n","22                              Tangled  Animation  2010\n","1                       Youth in Revolt     Comedy  2010\n","2                  Sex and the City Two     Comedy  2010\n","3                    Sex and the City 2     Comedy  2010\n","10                   Our Family Wedding     Comedy  2010\n","19                          The Duchess      Drama  2008\n","20  The Curious Case of Benjamin Button    Fantasy  2008\n","7                              Waitress    Romance  2007\n","0            Zack and Miri Make a Porno    Romance  2008\n","0                    Something Borrowed    Romance  2011\n","15                       New Year's Eve    Romance  2011"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"BgS7mdxr2-Ps"},"source":["# Q3 (15 points) Data Analysis\n","\n","###3.1 (7 points)  Count the number of  movies types (types of movies stored in ```Genre``` column, like Comedy, Drama)  in **CSV** and **JSON** files. \n","\n","Hint: concatenate dataframes of csv and json files, then count values of Genre column.\n"]},{"cell_type":"code","metadata":{"id":"USe-m3WGz4JS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678587872760,"user_tz":360,"elapsed":194,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}},"outputId":"0de637d4-9cc0-465d-9141-daae3f7ef8c6"},"source":["# ---put your answer below--\n","frames2 = [json_df, csv_df]\n","result2 = pd.concat(frames2)\n","result3 = result2.groupby(\"Genre\")['Genre'].count().sort_values(ascending=False)\n","result3\n"],"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Genre\n","Comedy       23\n","Romance      12\n","Drama         8\n","Animation     2\n","Comdy         1\n","Fantasy       1\n","Romence       1\n","Name: Genre, dtype: int64"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"No6b8vo65Bnz","executionInfo":{"status":"ok","timestamp":1646004546584,"user_tz":360,"elapsed":7,"user":{"displayName":"Carl J.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00314995275315155530"}},"outputId":"9ac1833a-e69a-4ad5-8d72-0a9feb0f7985"},"source":["# sample output"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Comedy       23\n","Romance      12\n","Drama         8\n","Animation     2\n","Fantasy       1\n","Romence       1\n","Comdy         1\n","Name: Genre, dtype: int64"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"t6dK9xNf8FG0"},"source":["### 3.2  (8 points) Then plot counts of movies in a bar chart with axis labels and title\n","Ref: https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.plot.html"]},{"cell_type":"code","source":["# ---put your answer below--\n","result4 = pd.Series(result3)\n","result4.plot(xlabel='Movie Types',ylabel='Count',title='Count Types of Movies Stored in CSV and JSON Files',kind='bar')\n","\n","\n","\n","\n"],"metadata":{"id":"tP49n2yFiTop","colab":{"base_uri":"https://localhost:8080/","height":353},"executionInfo":{"status":"ok","timestamp":1678587879172,"user_tz":360,"elapsed":290,"user":{"displayName":"Bin Wang","userId":"15645660969972364664"}},"outputId":"2a7acb14-0cc5-4024-8785-269806d7c562"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:title={'center':'Count Types of Movies Stored in CSV and JSON Files'}, xlabel='Movie Types', ylabel='Count'>"]},"metadata":{},"execution_count":79},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":336},"id":"VHfx9fSd6NC2","executionInfo":{"status":"ok","timestamp":1646004546584,"user_tz":360,"elapsed":6,"user":{"displayName":"Carl J.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00314995275315155530"}},"outputId":"f18e1158-b16e-477e-bf2e-66d75a4fdba2"},"source":["# sample output"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]}]}